buildscript {

    ext.kotlin_version = '1.4.10'
    ext.junit_version = '5.7.0'
    ext.ec_version = '10.4.0'
    ext.guava_version = '28.2-jre'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: "kotlin"

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}


sourceSets {
    //combine Kotlin and Java source into same dirs
    main.java.srcDirs += 'src/main/java'
    test.kotlin.srcDirs += 'src/test/java'
    test.java.srcDirs += 'src/test/java'

    main.java.srcDirs += 'srcGen/main/java'
    test.kotlin.srcDirs += 'srcGen/test/java'
    test.java.srcDirs += 'srcGen/test/java'

}

repositories {
    mavenCentral()
}


test{
    maxParallelForks = 5
    maxHeapSize = '2G'
}

dependencies {
    compile "org.eclipse.collections:eclipse-collections-api:$ec_version"
    compile "org.eclipse.collections:eclipse-collections:$ec_version"

    compile "com.google.guava:guava:$guava_version"

    compile group: 'org.jetbrains', name: 'annotations', version: '20.1.0'
    
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //TODO optional dependencies?
    testCompile "com.xenomachina:kotlin-argparser:2.0.7"

    compile 'net.jpountz.lz4:lz4:1.3.0'
    //TODO is there better version?

    testCompile("io.kotlintest:kotlintest-runner-junit5:3.4.2")
    testRuntime("org.junit.vintage:junit-vintage-engine:$junit_version") //TODO all test deps compile only?

    testCompile("org.junit.jupiter:junit-jupiter-api:$junit_version")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junit_version")
}
